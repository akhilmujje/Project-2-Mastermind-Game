/* EE422C Project 2 (Mastermind) submission by 9/22/2016
 * Devisriram Akhil Mujje
 * dam4335
 * Slip days used: <0>
 * Fall 2016
 */

package assignment2;

public class Feedback {
	private String fbk;
	private int black;
	private int white;

	public Feedback() {
		fbk = "";
		black = 0;
		white = 0;
	}
	
	/*
	 * plural
	 * Concatenates an 's' to the end of a given string
	 * and returns it, essentially in its plural form
	 * @param l string that needs to be attached with 's'
	 * @return string with 's' attached to it
	 */
	public String plural(String l) {
		return l += "s";
	}
	/*
	 * getFeedback
	 * Takes in a Guess and the code, processes it,
	 * and returns a result in String format
	 * @param g Guess object which contains the guess string from player
	 * @param code secret code generated by computer for this round of this game
	 * @return the feedback results, the number of black or white pegs
	 */
	public String getFeedback(Guess g, String code) {
		boolean leftover = true;
		String s = g.getGuess();

		for (int j = 0; j < code.length(); j++) {
			if (code.charAt(j) == s.charAt(j)) {
				black++;
				s = s.substring(0, j) + 'x' + s.substring(j + 1);
				code = code.substring(0, j) + 'x' + code.substring(j + 1);
			}
		}

		if (black == code.length())
			leftover = false;

		while (leftover) {
			for (int j = 0; j < code.length(); j++) {

				for (int i = 0; i < s.length(); i++) {

					if (code.charAt(j) == s.charAt(i) && (s.charAt(i) != 'x')) {
						white++;
						s = s.substring(0, i) + 'x' + s.substring(i + 1);
						code = code.substring(0, j) + 'x' + code.substring(j + 1);
					}
				}
			}
			leftover = false;
		}

		if (black == 0 && white == 0)
			return " No pegs";
		if (black == 0) {
			fbk = white + " white peg";
			if (white > 1) {
				return plural(fbk);
			}
			return fbk;
		}
		if (white == 0) {
			fbk = black + " black peg";
			if (black > 1)
				return plural(fbk);
			return fbk;
		} else {
			fbk = black + " black peg";
			if (black > 1) {
				fbk = plural(fbk);
			}

			fbk += (", " + white + " white peg");

			if (white > 1)
				fbk = plural(fbk);

			return fbk;

		}
	}
	/**
	 * getBlack
	 * returns the number of black pegs based on the given guess
	 * @return the number of black pegs
	 */
	public int getBlack() {
		return black;
	}
	
	/**
	 * getWhite
	 * returns the number of white pegs based on the given guess
	 * @return the number of white pegs
	 */
	public int getWhite() {
		return white;
	}

}
